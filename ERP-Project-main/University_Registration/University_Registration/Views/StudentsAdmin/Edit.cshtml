@model University_Registration.Models.Student

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/Adminlayout2.cshtml";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Student</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Student_ID)

        <table>
            <tr>
                <td>
                    @Html.LabelFor(model => model.Id, "Id", htmlAttributes: new { @class = "control-label col-md-2" })

                </td>
                <td>
                    @Html.DropDownList("Id", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })

                </td>
                <td>
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })

                </td>
                <td>
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })

                </td>
                <td>
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(model => model.NationalNum, htmlAttributes: new { @class = "control-label col-md-2" })

                </td>
                <td>
                    @Html.EditorFor(model => model.NationalNum, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NationalNum, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(model => model.Grad, htmlAttributes: new { @class = "control-label col-md-2" })

                </td>
                <td>
                    @Html.EditorFor(model => model.Grad, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Grad, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(model => model.Pic, htmlAttributes: new { @class = "control-label col-md-2" })

                </td>
                <td>
                    @Html.EditorFor(model => model.Pic, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Pic, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })

                </td>
                <td>
                    @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(model => model.PersonalIdFile, htmlAttributes: new { @class = "control-label col-md-2" })

                </td>
                <td>
                    @Html.EditorFor(model => model.PersonalIdFile, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PersonalIdFile, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(model => model.CertificateFile, htmlAttributes: new { @class = "control-label col-md-2" })

                </td>
                <td>
                    @Html.EditorFor(model => model.CertificateFile, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CertificateFile, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })

                </td>
                <td>
                    @Html.EditorFor(model => model.Gender)
                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(model => model.Major_ID, "Major_ID", htmlAttributes: new { @class = "control-label col-md-2" })

                </td>
                <td>
                    @Html.DropDownList("Major_ID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Major_ID, "", new { @class = "text-danger" })
                </td>
            </tr>
        </table>





        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-success" />
                @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })

            </div>
        </div>
    </div>
}
